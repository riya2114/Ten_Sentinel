// import { useState, useMemo } from 'react';
// import React from "react";
// import { CubeIcon, AdjustmentsVerticalIcon, EyeSlashIcon } from '@heroicons/react/24/outline';

// const pentestTypesData = [
//   {
//     id: 'white_box',
//     icon: CubeIcon,
//     title: 'White Box Testing',
//     description: 'Also known as Clear Box testing, this approach grants penetration testers full administrative access to the cloud infrastructure, including configurations and source code. With complete visibility, the testers perform a detailed analysis to uncover internal and external vulnerabilities, misconfigurations, and weaknesses in the cloud architecture.',
//     activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2',
//     inactiveIconColor: 'text-blue-500',
//     activeTextColor: 'text-blue-600',
//     buttonText: 'White Box'
//   },
//   {
//     id: 'gray_box',
//     icon: AdjustmentsVerticalIcon,
//     title: 'Gray Box Testing',
//     description: 'In Gray Box testing, penetration testers are provided with limited knowledge of the cloud systems, such as partial access to user accounts or restricted administrative privileges. This simulates an attack from a semi-insider perspective, focusing on identifying vulnerabilities that could be exploited by someone with partial insider knowledge.',
//     activeClasses: 'bg-gray-500 text-white ring-4 ring-gray-300 ring-offset-2',
//     inactiveIconColor: 'text-gray-500',
//     activeTextColor: 'text-gray-600',
//     buttonText: 'Gray Box'
//   },
//   {
//     id: 'black_box',
//     icon: EyeSlashIcon,
//     title: 'Black Box Testing',
//     description: 'In this method, penetration testers have no prior information about the cloud infrastructure. They act as external attackers, attempting to exploit the system without any privileged insights. Black Box testing is designed to assess the cloud environment\'s perimeter defences and its ability to withstand unauthorized access from external threats.',
//     activeClasses: 'bg-black text-white ring-4 ring-gray-700 ring-offset-2',
//     inactiveIconColor: 'text-gray-800',
//     activeTextColor: 'text-gray-900',
//     buttonText: 'Black Box'
//   },
// ];

// const PentestTypes = () => {
//   const [activeType, setActiveType] = useState(pentestTypesData[1]); // Default to Gray Box

//   const buttonOrbitPositions = useMemo(() => {
//     const radius = 40;
//     const centerX = 50;
//     const centerY = 50;
//     const reorderedAngles = [-90, 150, 30];

//     return pentestTypesData.map((_, index) => {
//       const angleDeg = reorderedAngles[index % reorderedAngles.length];
//       const angleRad = (angleDeg * Math.PI) / 180;
//       const x = centerX + radius * Math.cos(angleRad);
//       const y = centerY + radius * Math.sin(angleRad);
//       return {
//         top: `${y}%`,
//         left: `${x}%`,
//         transform: 'translate(-50%, -50%)',
//       };
//     });
//   }, []);

//   return (
//     <div className="py-16 px-4 sm:px-6 lg:px-8 bg-gray-50">
//       {/* lg:items-center vertically aligns the grid cells (columns) */}
//       <div className="max-w-7xl mx-auto grid lg:grid-cols-3 gap-12 items-start lg:items-center">
//         {/* Left Column: flex flex-col justify-center vertically centers its content (h2 and p) */}
//         <div className="lg:col-span-1 flex flex-col justify-center">
//           <h2 className="text-3xl font-bold text-gray-900 mb-4">
//             Types of Cloud Pentests We Provide
//           </h2>
//           <p className="text-lg text-gray-700">
//             We offer various penetration testing techniques. We utilize systematic planning and several strategies designed to achieve specific security assessment goals. Common techniques include Black Box Testing, White Box Testing, and Gray Box Testing, each contributing uniquely to the assessment of the application.
//           </p>
//         </div>

//         {/* Right Column */}
//         <div className="lg:col-span-2">
//           <div
//             className="relative mb-10
//                        min-h-[30rem] sm:min-h-[32rem] md:min-h-[34rem] lg:min-h-[32rem]
//                        flex items-center justify-center"
//           >
//             <svg
//               className="absolute inset-0 z-0"
//               width="100%"
//               height="100%"
//               viewBox="0 0 100 100"
//               preserveAspectRatio="none"
//               fill="none"
//               xmlns="http://www.w3.org/2000/svg"
//             >
//               <circle
//                 cx="50"
//                 cy="50"
//                 r="40"
//                 stroke="rgba(192, 132, 252, 0.4)"
//                 strokeWidth="0.5"
//               />
//             </svg>

//             {pentestTypesData.map((type, index) => (
//               <button
//                 key={type.id}
//                 onClick={() => setActiveType(type)}
//                 style={buttonOrbitPositions[index]}
//                 className={`absolute p-3 rounded-full w-24 h-24 md:w-28 md:h-28
//                   flex flex-col items-center justify-center text-center shadow-lg
//                   transition-all duration-300 transform hover:scale-105
//                   ${activeType.id === type.id ? type.activeClasses : `bg-gray-100 hover:bg-gray-200 text-gray-700`}
//                   z-10
//                 `}
//               >
//                 <type.icon className={`h-8 w-8 md:h-10 md:h-10 mb-1 md:mb-2
//                   ${activeType.id === type.id ? 'text-white' : type.inactiveIconColor}`} />
//                 <span className="text-xs md:text-sm font-semibold">{type.buttonText}</span>
//               </button>
//             ))}

//             {activeType && (
//               <div
//                 className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2
//                            w-10/12 sm:w-3/4 md:w-2/3 lg:w-1/2 max-w-sm sm:max-w-md
//                            text-center
//                            z-5
//                            pointer-events-none"
//               >
//                 <h3 className={`text-xl sm:text-2xl font-semibold mb-3 ${activeType.activeTextColor}`}>
//                   {activeType.title}
//                 </h3>
//                 <p className="text-sm sm:text-base text-gray-700 leading-relaxed">
//                   {activeType.description}
//                 </p>
//               </div>
//             )}
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default PentestTypes;
// import { useState, useMemo } from 'react';
// import React from "react";
// import { CubeIcon, AdjustmentsVerticalIcon, EyeSlashIcon } from '@heroicons/react/24/outline';

// const pentestTypesData = [
//   // ... (pentestTypesData remains the same)
//   {
//     id: 'white_box',
//     icon: CubeIcon,
//     title: 'White Box Testing',
//     description: 'Also known as Clear Box testing, this approach grants penetration testers full administrative access to the cloud infrastructure, including configurations and source code. With complete visibility, the testers perform a detailed analysis to uncover internal and external vulnerabilities, misconfigurations, and weaknesses in the cloud architecture.',
//     activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2',
//     inactiveIconColor: 'text-blue-500',
//     activeTextColor: 'text-blue-600',
//     buttonText: 'White Box'
//   },
//   {
//     id: 'gray_box',
//     icon: AdjustmentsVerticalIcon,
//     title: 'Gray Box Testing',
//     description: 'In Gray Box testing, penetration testers are provided with limited knowledge of the cloud systems, such as partial access to user accounts or restricted administrative privileges. This simulates an attack from a semi-insider perspective, focusing on identifying vulnerabilities that could be exploited by someone with partial insider knowledge.',
//     activeClasses: 'bg-gray-500 text-white ring-4 ring-gray-300 ring-offset-2',
//     inactiveIconColor: 'text-gray-500',
//     activeTextColor: 'text-gray-600',
//     buttonText: 'Gray Box'
//   },
//   {
//     id: 'black_box',
//     icon: EyeSlashIcon,
//     title: 'Black Box Testing',
//     description: 'In this method, penetration testers have no prior information about the cloud infrastructure. They act as external attackers, attempting to exploit the system without any privileged insights. Black Box testing is designed to assess the cloud environment\'s perimeter defences and its ability to withstand unauthorized access from external threats.',
//     activeClasses: 'bg-black text-white ring-4 ring-gray-700 ring-offset-2',
//     inactiveIconColor: 'text-gray-800',
//     activeTextColor: 'text-gray-900',
//     buttonText: 'Black Box'
//   },
// ];

// const PentestTypes = () => {
//   const [activeType, setActiveType] = useState(pentestTypesData[1]); // Default to Gray Box, used by orbit diagram

//   // This useMemo is only for the orbit diagram (md+ screens)
//   const buttonOrbitPositions = useMemo(() => {
//     const radius = 40;
//     const centerX = 50;
//     const centerY = 50;
//     const reorderedAngles = [-90, 150, 30];

//     return pentestTypesData.map((_, index) => {
//       const angleDeg = reorderedAngles[index % reorderedAngles.length];
//       const angleRad = (angleDeg * Math.PI) / 180;
//       const x = centerX + radius * Math.cos(angleRad);
//       const y = centerY + radius * Math.sin(angleRad);
//       return {
//         top: `${y}%`,
//         left: `${x}%`,
//         transform: 'translate(-50%, -50%)',
//       };
//     });
//   }, []);

//   return (
//     <div className="py-16 px-4 sm:px-6 lg:px-8 bg-gray-50">
//       <div className="max-w-7xl mx-auto grid lg:grid-cols-3 gap-x-12 gap-y-10 lg:gap-y-0 items-start lg:items-center">
//         {/* Left Column */}
//         <div className="lg:col-span-1 lg:flex lg:flex-col lg:justify-center">
//           <h2 className="text-3xl font-bold text-gray-900 mb-4">
//             Types of Cloud Pentests We Provide
//           </h2>
//           <p className="text-lg text-gray-700">
//             We offer various penetration testing techniques. We utilize systematic planning and several strategies designed to achieve specific security assessment goals. Common techniques include Black Box Testing, White Box Testing, and Gray Box Testing, each contributing uniquely to the assessment of the application.
//           </p>
//         </div>

//         {/* Right Column - Contains conditional layouts */}
//         <div className="lg:col-span-2">
//           {/* Layout for < md screens (Stacked Cards) */}
//           <div className="space-y-6 md:hidden">
//             {pentestTypesData.map((type) => (
//               <div key={type.id} className="bg-white p-6 rounded-xl shadow-lg">
//                 <div className="flex items-start sm:items-center mb-3">
//                   <type.icon className={`h-10 w-10 sm:h-12 sm:w-12 mr-4 flex-shrink-0 ${type.inactiveIconColor}`} />
//                   <div>
//                     <h3 className={`text-xl sm:text-2xl font-semibold ${type.activeTextColor}`}>{type.title}</h3>
//                   </div>
//                 </div>
//                 <p className="text-gray-700 text-sm sm:text-base leading-relaxed">{type.description}</p>
//               </div>
//             ))}
//           </div>

//           {/* Layout for md+ screens (Orbit Diagram) */}
//           <div
//             className="hidden md:flex relative /* Changed to md:flex for items-center/justify-center to work */
//                        md:min-h-[30rem] 
//                        lg:min-h-[32rem]
//                        items-center justify-center"
//           >
//             <svg
//               className="absolute inset-0 z-0"
//               width="100%"
//               height="100%"
//               viewBox="0 0 100 100"
//               preserveAspectRatio="none"
//               fill="none"
//               xmlns="http://www.w3.org/2000/svg"
//             >
//               <circle
//                 cx="50"
//                 cy="50"
//                 r="40"
//                 stroke="rgba(192, 132, 252, 0.4)"
//                 strokeWidth="0.5"
//               />
//             </svg>

//             {pentestTypesData.map((type, index) => (
//               <button
//                 key={type.id}
//                 onClick={() => setActiveType(type)} // This sets state for the centered text below
//                 style={buttonOrbitPositions[index]}
//                 className={`absolute p-3 rounded-full w-28 h-28 /* Using md+ size directly */
//                   flex flex-col items-center justify-center text-center shadow-lg
//                   transition-all duration-300 transform hover:scale-105
//                   ${activeType.id === type.id ? type.activeClasses : `bg-gray-100 hover:bg-gray-200 text-gray-700`}
//                   z-10
//                 `}
//               >
//                 <type.icon className={`h-10 w-10 mb-2 /* Using md+ size directly */
//                   ${activeType.id === type.id ? 'text-white' : type.inactiveIconColor}`} />
//                 <span className="text-sm font-semibold /* Using md+ size directly */
//                 ">{type.buttonText}</span>
//               </button>
//             ))}

//             {/* Centered text for Orbit Diagram (md+ screens) */}
//             {activeType && (
//               <div
//                 className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2
//                            w-2/3 lg:w-1/2 max-w-md /* Adjusted for md+ better readability */
//                            text-center
//                            z-5
//                            pointer-events-none"
//               >
//                 <h3 className={`text-xl md:text-2xl font-semibold mb-3 ${activeType.activeTextColor}`}>
//                   {activeType.title}
//                 </h3>
//                 <p className="text-sm md:text-base text-gray-700 leading-relaxed">
//                   {activeType.description}
//                 </p>
//               </div>
//             )}
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default PentestTypes;

// import { useState, useMemo } from 'react';
// import React from "react";
// import { CubeIcon, AdjustmentsVerticalIcon, EyeSlashIcon } from '@heroicons/react/24/outline';

// const pentestTypesData = [
//   // ... (pentestTypesData remains the same)
//   {
//     id: 'white_box',
//     icon: CubeIcon,
//     title: 'White Box Testing',
//     description: 'Also known as Clear Box testing, this approach grants penetration testers full administrative access to the cloud infrastructure, including configurations and source code. With complete visibility, the testers perform a detailed analysis to uncover internal and external vulnerabilities, misconfigurations, and weaknesses in the cloud architecture.',
//     activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2',
//     inactiveIconColor: 'text-blue-500',
//     activeTextColor: 'text-blue-600',
//     buttonText: 'White Box'
//   },
//   {
//     id: 'gray_box',
//     icon: AdjustmentsVerticalIcon,
//     title: 'Gray Box Testing',
//     description: 'In Gray Box testing, penetration testers are provided with limited knowledge of the cloud systems, such as partial access to user accounts or restricted administrative privileges. This simulates an attack from a semi-insider perspective, focusing on identifying vulnerabilities that could be exploited by someone with partial insider knowledge.',
//     activeClasses: 'bg-gray-500 text-white ring-4 ring-gray-300 ring-offset-2',
//     inactiveIconColor: 'text-gray-500',
//     activeTextColor: 'text-gray-600',
//     buttonText: 'Gray Box'
//   },
//   {
//     id: 'black_box',
//     icon: EyeSlashIcon,
//     title: 'Black Box Testing',
//     description: 'In this method, penetration testers have no prior information about the cloud infrastructure. They act as external attackers, attempting to exploit the system without any privileged insights. Black Box testing is designed to assess the cloud environment\'s perimeter defences and its ability to withstand unauthorized access from external threats.',
//     activeClasses: 'bg-black text-white ring-4 ring-gray-700 ring-offset-2',
//     inactiveIconColor: 'text-gray-800',
//     activeTextColor: 'text-gray-900',
//     buttonText: 'Black Box'
//   },
// ];

// const PentestTypes = () => {
//   const [activeType, setActiveType] = useState(pentestTypesData[1]);

//   const buttonOrbitPositions = useMemo(() => {
//     const radius = 40;
//     const centerX = 50;
//     const centerY = 50;
//     const reorderedAngles = [-90, 150, 30];

//     return pentestTypesData.map((_, index) => {
//       const angleDeg = reorderedAngles[index % reorderedAngles.length];
//       const angleRad = (angleDeg * Math.PI) / 180;
//       const x = centerX + radius * Math.cos(angleRad);
//       const y = centerY + radius * Math.sin(angleRad);
//       return {
//         top: `${y}%`,
//         left: `${x}%`,
//         transform: 'translate(-50%, -50%)',
//       };
//     });
//   }, []);

//   return (
//     <div className="py-16 px-4 sm:px-6 lg:px-8 bg-gray-50">
//       <div className="max-w-7xl mx-auto grid lg:grid-cols-3 gap-x-12 gap-y-10 lg:gap-y-0 items-start lg:items-center">
//         {/* Left Column: Centered on <md, left-aligned and vertically centered on lg+ */}
//         <div className="lg:col-span-1 text-center md:text-left lg:flex lg:flex-col lg:justify-center">
//           {/* Added whitespace-nowrap for small screens, responsive font size for heading */}
//           <h2 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-4 whitespace-nowrap sm:whitespace-normal">
//             Types of Cloud Pentests We Provide
//           </h2>
//           <p className="text-lg text-gray-700">
//             We offer various penetration testing techniques. We utilize systematic planning and several strategies designed to achieve specific security assessment goals. Common techniques include Black Box Testing, White Box Testing, and Gray Box Testing, each contributing uniquely to the assessment of the application.
//           </p>
//         </div>

//         {/* Right Column - Contains conditional layouts */}
//         <div className="lg:col-span-2">
//           {/* Layout for < md screens (Stacked Cards) */}
//           <div className="space-y-6 md:hidden">
//             {pentestTypesData.map((type) => (
//               <div key={type.id} className="bg-white p-6 rounded-xl shadow-lg">
//                 <div className="flex items-start sm:items-center mb-3">
//                   <type.icon className={`h-10 w-10 sm:h-12 sm:w-12 mr-4 flex-shrink-0 ${type.inactiveIconColor}`} />
//                   <div>
//                     <h3 className={`text-xl sm:text-2xl font-semibold ${type.activeTextColor}`}>{type.title}</h3>
//                   </div>
//                 </div>
//                 <p className="text-gray-700 text-sm sm:text-base leading-relaxed">{type.description}</p>
//               </div>
//             ))}
//           </div>

//           {/* Layout for md+ screens (Orbit Diagram) */}
//           <div
//             className="hidden md:flex relative
//                        md:min-h-[30rem] 
//                        lg:min-h-[32rem]
//                        items-center justify-center"
//           >
//             <svg
//               className="absolute inset-0 z-0"
//               width="100%"
//               height="100%"
//               viewBox="0 0 100 100"
//               preserveAspectRatio="none"
//               fill="none"
//               xmlns="http://www.w3.org/2000/svg"
//             >
//               <circle
//                 cx="50"
//                 cy="50"
//                 r="40"
//                 stroke="rgba(192, 132, 252, 0.4)"
//                 strokeWidth="0.5"
//               />
//             </svg>

//             {pentestTypesData.map((type, index) => (
//               <button
//                 key={type.id}
//                 onClick={() => setActiveType(type)}
//                 style={buttonOrbitPositions[index]}
//                 className={`absolute p-3 rounded-full w-28 h-28
//                   flex flex-col items-center justify-center text-center shadow-lg
//                   transition-all duration-300 transform hover:scale-105
//                   ${activeType.id === type.id ? type.activeClasses : `bg-gray-100 hover:bg-gray-200 text-gray-700`}
//                   z-10
//                 `}
//               >
//                 <type.icon className={`h-10 w-10 mb-2
//                   ${activeType.id === type.id ? 'text-white' : type.inactiveIconColor}`} />
//                 <span className="text-sm font-semibold">{type.buttonText}</span>
//               </button>
//             ))}

//             {activeType && (
//               <div
//                 className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2
//                            w-2/3 lg:w-1/2 max-w-md
//                            text-center
//                            z-5
//                            pointer-events-none"
//               >
//                 <h3 className={`text-xl md:text-2xl font-semibold mb-3 ${activeType.activeTextColor}`}>
//                   {activeType.title}
//                 </h3>
//                 <p className="text-sm md:text-base text-gray-700 leading-relaxed">
//                   {activeType.description}
//                 </p>
//               </div>
//             )}
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default PentestTypes;

// import { useState, useMemo } from 'react';
// import React from "react";
// import { CubeIcon, AdjustmentsVerticalIcon, EyeSlashIcon } from '@heroicons/react/24/outline';

// const pentestTypesData = [
//   {
//     id: 'white_box',
//     icon: CubeIcon,
//     title: 'White Box Testing',
//     description: 'Also known as Clear Box testing, this approach grants penetration testers full administrative access to the cloud infrastructure, including configurations and source code. With complete visibility, the testers perform a detailed analysis to uncover internal and external vulnerabilities, misconfigurations, and weaknesses in the cloud architecture.',
//     activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2', // This is for the ORBIT button
//     inactiveIconColor: 'text-blue-500', // For ORBIT button icon
//     activeTextColor: 'text-blue-600',   // For ORBIT centered title AND can be used for mobile card title if we remove specific blue
//     buttonText: 'White Box'
//   },
//   {
//     id: 'gray_box',
//     icon: AdjustmentsVerticalIcon,
//     title: 'Gray Box Testing',
//     description: 'In Gray Box testing, penetration testers are provided with limited knowledge of the cloud systems, such as partial access to user accounts or restricted administrative privileges. This simulates an attack from a semi-insider perspective, focusing on identifying vulnerabilities that could be exploited by someone with partial insider knowledge.',
//     activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2', // Changed for consistency
//     inactiveIconColor: 'text-gray-500',
//     activeTextColor: 'text-gray-600',
//     buttonText: 'Gray Box'
//   },
//   {
//     id: 'black_box',
//     icon: EyeSlashIcon,
//     title: 'Black Box Testing',
//     description: 'In this method, penetration testers have no prior information about the cloud infrastructure. They act as external attackers, attempting to exploit the system without any privileged insights. Black Box testing is designed to assess the cloud environment\'s perimeter defences and its ability to withstand unauthorized access from external threats.',
//     activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2', // Changed for consistency
//     inactiveIconColor: 'text-gray-800',
//     activeTextColor: 'text-gray-900',
//     buttonText: 'Black Box'
//   },
// ];

// const PentestTypes = () => {
//   const [activeType, setActiveType] = useState(pentestTypesData[1]);

//   const buttonOrbitPositions = useMemo(() => {
//     const radius = 40;
//     const centerX = 50;
//     const centerY = 50;
//     const reorderedAngles = [-90, 150, 30];

//     return pentestTypesData.map((_, index) => {
//       const angleDeg = reorderedAngles[index % reorderedAngles.length];
//       const angleRad = (angleDeg * Math.PI) / 180;
//       const x = centerX + radius * Math.cos(angleRad);
//       const y = centerY + radius * Math.sin(angleRad);
//       return {
//         top: `${y}%`,
//         left: `${x}%`,
//         transform: 'translate(-50%, -50%)',
//       };
//     });
//   }, []);

//   return (
//     <div className="py-16 px-2 sm:px-4 lg:px-8 bg-gray-50 overflow-x-hidden">
//       <div className="max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-3 gap-x-12 gap-y-8 sm:gap-y-10 lg:gap-y-0 items-start lg:items-center">
//         <div className="lg:col-span-1 text-center md:text-left lg:flex lg:flex-col lg:justify-center break-words">
//           <h2 className="text-xl sm:text-2xl md:text-3xl font-bold text-gray-900 mb-3 sm:mb-4">
//             Types of Cloud Pentests We Provide
//           </h2>
//           <p className="text-base sm:text-lg text-gray-700">
//             We offer various penetration testing techniques. We utilize systematic planning and several strategies designed to achieve specific security assessment goals. Common techniques include Black Box Testing, White Box Testing, and Gray Box Testing, each contributing uniquely to the assessment of the application.
//           </p>
//         </div>

//         <div className="lg:col-span-2 break-words">
//           {/* Layout for < md screens (Stacked Cards) */}
//           <div className="space-y-4 sm:space-y-6 md:hidden">
//             {pentestTypesData.map((type) => (
//               <div key={type.id} className="bg-white p-3 sm:p-4 rounded-lg sm:rounded-xl shadow-md sm:shadow-lg">
//                 <div className="flex items-center mb-2 sm:mb-3">
//                   <type.icon className={`
//                     h-6 w-6
//                     sm:h-8 sm:w-8
//                     mr-2 sm:mr-3
//                     flex-shrink-0 
//                     text-blue-600  // << MAKE ALL ICONS IN MOBILE CARDS BLUE
//                     `} 
//                   />
//                   <div>
//                     {/* Make title blue for mobile cards, override activeTextColor from data */}
//                     <h3 className={`
//                       text-base
//                       sm:text-lg
//                       font-semibold 
//                       text-blue-700 // << MAKE ALL TITLES IN MOBILE CARDS BLUE (e.g., text-blue-700 for good contrast)
//                       `}>{type.title}
//                     </h3>
//                   </div>
//                 </div>
//                 <p className="text-gray-700 
//                   text-xs
//                   sm:text-sm
//                   leading-normal sm:leading-relaxed">
//                   {type.description}
//                 </p>
//               </div>
//             ))}
//           </div>

//           {/* Layout for md+ screens (Orbit Diagram) */}
//           <div
//             className="hidden md:flex relative
//                        md:min-h-[30rem] 
//                        lg:min-h-[32rem]
//                        items-center justify-center"
//           >
//              <svg
//               className="absolute inset-0 z-0"
//               width="100%"
//               height="100%"
//               viewBox="0 0 100 100"
//               preserveAspectRatio="none"
//               fill="none"
//               xmlns="http://www.w3.org/2000/svg"
//             >
//               <circle
//                 cx="50"
//                 cy="50"
//                 r="40"
//                 stroke="rgba(192, 132, 252, 0.4)"
//                 strokeWidth="0.5"
//               />
//             </svg>

//             {pentestTypesData.map((type, index) => (
//               <button
//                 key={type.id}
//                 onClick={() => setActiveType(type)}
//                 style={buttonOrbitPositions[index]}
//                 className={`absolute p-3 rounded-full w-28 h-28
//                   flex flex-col items-center justify-center text-center shadow-lg
//                   transition-all duration-300 transform hover:scale-105
//                   ${activeType.id === type.id ? type.activeClasses : `bg-gray-100 hover:bg-gray-200 text-gray-700`}
//                   z-10
//                 `}
//               >
//                 <type.icon className={`h-10 w-10 mb-2
//                   ${activeType.id === type.id ? 'text-white' : type.inactiveIconColor}`} />
//                 <span className="text-sm font-semibold">{type.buttonText}</span>
//               </button>
//             ))}

//             {activeType && (
//               <div
//                 className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2
//                            w-2/3 lg:w-1/2 max-w-md
//                            text-center
//                            z-5
//                            pointer-events-none"
//               >
//                 {/* Title in orbit diagram uses activeTextColor from data */}
//                 <h3 className={`text-xl md:text-2xl font-semibold mb-3 ${activeType.activeTextColor}`}>
//                   {activeType.title}
//                 </h3>
//                 <p className="text-sm md:text-base text-gray-700 leading-relaxed">
//                   {activeType.description}
//                 </p>
//               </div>
//             )}
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default PentestTypes;

// import { useState, useMemo } from 'react';
// import React from "react";
// import { motion } from 'framer-motion'; // 1. Import motion
// import { CubeIcon, AdjustmentsVerticalIcon, EyeSlashIcon } from '@heroicons/react/24/outline';

// const pentestTypesData = [
//   {
//     id: 'white_box',
//     icon: CubeIcon,
//     title: 'White Box Testing',
//     description: 'Also known as Clear Box testing, this approach grants penetration testers full administrative access to the cloud infrastructure, including configurations and source code. With complete visibility, the testers perform a detailed analysis to uncover internal and external vulnerabilities, misconfigurations, and weaknesses in the cloud architecture.',
//     activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2',
//     inactiveIconColor: 'text-blue-500',
//     activeTextColor: 'text-blue-600',
//     buttonText: 'White Box'
//   },
//   {
//     id: 'gray_box',
//     icon: AdjustmentsVerticalIcon,
//     title: 'Gray Box Testing',
//     description: 'In Gray Box testing, penetration testers are provided with limited knowledge of the cloud systems, such as partial access to user accounts or restricted administrative privileges. This simulates an attack from a semi-insider perspective, focusing on identifying vulnerabilities that could be exploited by someone with partial insider knowledge.',
//     activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2',
//     inactiveIconColor: 'text-gray-500',
//     activeTextColor: 'text-gray-600',
//     buttonText: 'Gray Box'
//   },
//   {
//     id: 'black_box',
//     icon: EyeSlashIcon,
//     title: 'Black Box Testing',
//     description: 'In this method, penetration testers have no prior information about the cloud infrastructure. They act as external attackers, attempting to exploit the system without any privileged insights. Black Box testing is designed to assess the cloud environment\'s perimeter defences and its ability to withstand unauthorized access from external threats.',
//     activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2',
//     inactiveIconColor: 'text-gray-800',
//     activeTextColor: 'text-gray-900',
//     buttonText: 'Black Box'
//   },
// ];

// const PentestTypes = () => {
//   const [activeType, setActiveType] = useState(pentestTypesData[1]);

//   const buttonOrbitPositions = useMemo(() => {
//     const radius = 40;
//     const centerX = 50;
//     const centerY = 50;
//     const reorderedAngles = [-90, 150, 30]; // Top, Bottom-left, Bottom-right

//     return pentestTypesData.map((_, index) => {
//       const angleDeg = reorderedAngles[index % reorderedAngles.length];
//       const angleRad = (angleDeg * Math.PI) / 180;
//       const x = centerX + radius * Math.cos(angleRad);
//       const y = centerY + radius * Math.sin(angleRad);
//       return {
//         top: `${y}%`,
//         left: `${x}%`,
//         transform: 'translate(-50%, -50%)',
//       };
//     });
//   }, []);

//   // 2. Define animation variants for text content
//   const textContentVariants = {
//     hidden: { opacity: 0, y: 20 },
//     visible: (delay = 0) => ({
//       opacity: 1,
//       y: 0,
//       transition: {
//         delay,
//         duration: 0.6,
//         ease: "easeOut",
//       },
//     }),
//   };

//   return (
//     <div className="py-16 px-2 sm:px-4 lg:px-8 bg-gray-50 overflow-x-hidden">
//       <div className="max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-3 gap-x-12 gap-y-8 sm:gap-y-10 lg:gap-y-0 items-start lg:items-center">
//         <div className="lg:col-span-1 text-center md:text-left lg:flex lg:flex-col lg:justify-center break-words">
//           {/* 3. Apply motion to the heading */}
//           <motion.h2
//             className="text-xl sm:text-2xl md:text-3xl font-bold text-gray-900 mb-3 sm:mb-4"
//             variants={textContentVariants}
//             initial="hidden"
//             whileInView="visible"
//             viewport={{ once: true, amount: 0.3 }}
//             custom={0.1} // Stagger delay
//           >
//             Types of Cloud Pentests We Provide
//           </motion.h2>
//           {/* 4. Apply motion to the paragraph */}
//           <motion.p
//             className="text-base sm:text-lg text-gray-700"
//             variants={textContentVariants}
//             initial="hidden"
//             whileInView="visible"
//             viewport={{ once: true, amount: 0.3 }}
//             custom={0.2} // Stagger delay
//           >
//             We offer various penetration testing techniques. We utilize systematic planning and several strategies designed to achieve specific security assessment goals. Common techniques include Black Box Testing, White Box Testing, and Gray Box Testing, each contributing uniquely to the assessment of the application.
//           </motion.p>
//         </div>

//         <div className="lg:col-span-2 break-words">
//           {/* Layout for < md screens (Stacked Cards) */}
//           <div className="space-y-4 sm:space-y-6 md:hidden">
//             {pentestTypesData.map((type) => (
//               <div key={type.id} className="bg-white p-3 sm:p-4 rounded-lg sm:rounded-xl shadow-md sm:shadow-lg">
//                 <div className="flex items-center mb-2 sm:mb-3">
//                   <type.icon className={`
//                     h-6 w-6
//                     sm:h-8 sm:w-8
//                     mr-2 sm:mr-3
//                     flex-shrink-0 
//                     text-blue-600
//                     `}
//                   />
//                   <div>
//                     <h3 className={`
//                       text-base
//                       sm:text-lg
//                       font-semibold 
//                       text-blue-700
//                       `}>{type.title}
//                     </h3>
//                   </div>
//                 </div>
//                 <p className="text-gray-700 
//                   text-xs
//                   sm:text-sm
//                   leading-normal sm:leading-relaxed">
//                   {type.description}
//                 </p>
//               </div>
//             ))}
//           </div>

//           {/* Layout for md+ screens (Orbit Diagram) */}
//           <div
//             className="hidden md:flex relative
//                        md:min-h-[30rem] 
//                        lg:min-h-[32rem]
//                        items-center justify-center"
//           >
//              <svg
//               className="absolute inset-0 z-0"
//               width="100%"
//               height="100%"
//               viewBox="0 0 100 100"
//               preserveAspectRatio="none"
//               fill="none"
//               xmlns="http://www.w3.org/2000/svg"
//             >
//               <circle
//                 cx="50"
//                 cy="50"
//                 r="40"
//                 stroke="rgba(192, 132, 252, 0.4)" // Light purple-ish orbit line
//                 strokeWidth="0.5"
//               />
//             </svg>

//             {pentestTypesData.map((type, index) => (
//               <button
//                 key={type.id}
//                 onClick={() => setActiveType(type)}
//                 style={buttonOrbitPositions[index]}
//                 className={`absolute p-3 rounded-full w-28 h-28
//                   flex flex-col items-center justify-center text-center shadow-lg
//                   transition-all duration-300 transform hover:scale-105
//                   ${activeType.id === type.id ? type.activeClasses : `bg-gray-100 hover:bg-gray-200 text-gray-700`}
//                   z-10
//                 `}
//               >
//                 <type.icon className={`h-10 w-10 mb-2
//                   ${activeType.id === type.id ? 'text-white' : type.inactiveIconColor}`} />
//                 <span className="text-sm font-semibold">{type.buttonText}</span>
//               </button>
//             ))}

//             {activeType && (
//               <div
//                 className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2
//                            w-2/3 lg:w-1/2 max-w-md
//                            text-center
//                            z-5
//                            pointer-events-none" // So it doesn't interfere with button clicks
//               >
//                 <h3 className={`text-xl md:text-2xl font-semibold mb-3 ${activeType.activeTextColor}`}>
//                   {activeType.title}
//                 </h3>
//                 <p className="text-sm md:text-base text-gray-700 leading-relaxed">
//                   {activeType.description}
//                 </p>
//               </div>
//             )}
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default PentestTypes;



import { useState, useMemo } from 'react';
import React from "react";
import { motion } from 'framer-motion';
import { CubeIcon, AdjustmentsVerticalIcon, EyeSlashIcon } from '@heroicons/react/24/outline';

const pentestTypesData = [
  {
    id: 'white_box',
    icon: CubeIcon,
    title: 'White Box Testing',
    description: 'Also known as Clear Box testing, this approach grants penetration testers full administrative access to the cloud infrastructure, including configurations and source code. With complete visibility, the testers perform a detailed analysis to uncover internal and external vulnerabilities, misconfigurations, and weaknesses in the cloud architecture.',
    activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2',
    inactiveIconColor: 'text-blue-500',
    activeTextColor: 'text-blue-600',
    buttonText: 'White Box'
  },
  {
    id: 'gray_box',
    icon: AdjustmentsVerticalIcon,
    title: 'Gray Box Testing',
    description: 'In Gray Box testing, penetration testers are provided with limited knowledge of the cloud systems, such as partial access to user accounts or restricted administrative privileges. This simulates an attack from a semi-insider perspective, focusing on identifying vulnerabilities that could be exploited by someone with partial insider knowledge.',
    activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2',
    inactiveIconColor: 'text-gray-500',
    activeTextColor: 'text-gray-600',
    buttonText: 'Gray Box'
  },
  {
    id: 'black_box',
    icon: EyeSlashIcon,
    title: 'Black Box Testing',
    description: 'In this method, penetration testers have no prior information about the cloud infrastructure. They act as external attackers, attempting to exploit the system without any privileged insights. Black Box testing is designed to assess the cloud environment\'s perimeter defences and its ability to withstand unauthorized access from external threats.',
    activeClasses: 'bg-blue-500 text-white ring-4 ring-blue-300 ring-offset-2',
    inactiveIconColor: 'text-gray-800',
    activeTextColor: 'text-gray-900',
    buttonText: 'Black Box'
  },
];

const PentestTypes = () => {
  const [activeType, setActiveType] = useState(pentestTypesData[1]);

  const buttonOrbitPositions = useMemo(() => {
    const radius = 40;
    const centerX = 50;
    const centerY = 50;
    const reorderedAngles = [-90, 150, 30]; // Top, Bottom-left, Bottom-right

    return pentestTypesData.map((_, index) => {
      const angleDeg = reorderedAngles[index % reorderedAngles.length];
      const angleRad = (angleDeg * Math.PI) / 180;
      const x = centerX + radius * Math.cos(angleRad);
      const y = centerY + radius * Math.sin(angleRad);
      return {
        top: `${y}%`,
        left: `${x}%`,
        transform: 'translate(-50%, -50%)',
      };
    });
  }, []);

  const textContentVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: (delay = 0) => ({
      opacity: 1,
      y: 0,
      transition: {
        delay,
        duration: 0.6,
        ease: "easeOut",
      },
    }),
  };

  return (
    <div className="py-16 px-2 sm:px-4 lg:px-8 bg-gray-50 overflow-x-hidden">
      <div className="max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-3 gap-x-12 gap-y-8 sm:gap-y-10 lg:gap-y-0 items-start lg:items-center">
        {/* Updated text alignment classes here */}
        <div className="lg:col-span-1 text-center md:text-center lg:text-left lg:flex lg:flex-col lg:justify-center break-words">
          <motion.h2
            className="text-xl sm:text-2xl md:text-3xl font-bold text-gray-900 mb-3 sm:mb-4"
            variants={textContentVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true, amount: 0.3 }}
            custom={0.1}
          >
            Types of Cloud Pentests We Provide
          </motion.h2>
          <motion.p
            className="text-base sm:text-lg text-gray-700"
            variants={textContentVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true, amount: 0.3 }}
            custom={0.2}
          >
            We offer various penetration testing techniques. We utilize systematic planning and several strategies designed to achieve specific security assessment goals. Common techniques include Black Box Testing, White Box Testing, and Gray Box Testing, each contributing uniquely to the assessment of the application.
          </motion.p>
        </div>

        <div className="lg:col-span-2 break-words">
          {/* Layout for < md screens (Stacked Cards) */}
          <div className="space-y-4 sm:space-y-6 md:hidden">
            {pentestTypesData.map((type) => (
              <div key={type.id} className="bg-white p-3 sm:p-4 rounded-lg sm:rounded-xl shadow-md sm:shadow-lg">
                <div className="flex items-center mb-2 sm:mb-3">
                  <type.icon className={`
                    h-6 w-6
                    sm:h-8 sm:w-8
                    mr-2 sm:mr-3
                    flex-shrink-0
                    text-blue-600
                    `}
                  />
                  <div>
                    <h3 className={`
                      text-base
                      sm:text-lg
                      font-semibold
                      text-blue-700
                      `}>{type.title}
                    </h3>
                  </div>
                </div>
                <p className="text-gray-700
                  text-xs
                  sm:text-sm
                  leading-normal sm:leading-relaxed">
                  {type.description}
                </p>
              </div>
            ))}
          </div>

          {/* Layout for md+ screens (Orbit Diagram) */}
          <div
            className="hidden md:flex relative
                       md:min-h-[30rem]
                       lg:min-h-[32rem]
                       items-center justify-center"
          >
             <svg
              className="absolute inset-0 z-0"
              width="100%"
              height="100%"
              viewBox="0 0 100 100"
              preserveAspectRatio="none"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle
                cx="50"
                cy="50"
                r="40"
                stroke="rgba(192, 132, 252, 0.4)"
                strokeWidth="0.5"
              />
            </svg>

            {pentestTypesData.map((type, index) => (
              <button
                key={type.id}
                onClick={() => setActiveType(type)}
                style={buttonOrbitPositions[index]}
                className={`absolute p-3 rounded-full w-28 h-28
                  flex flex-col items-center justify-center text-center shadow-lg
                  transition-all duration-300 transform hover:scale-105
                  ${activeType.id === type.id ? type.activeClasses : `bg-gray-100 hover:bg-gray-200 text-gray-700`}
                  z-10
                `}
              >
                <type.icon className={`h-10 w-10 mb-2
                  ${activeType.id === type.id ? 'text-white' : type.inactiveIconColor}`} />
                <span className="text-sm font-semibold">{type.buttonText}</span>
              </button>
            ))}

            {activeType && (
              <div
                className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2
                           w-2/3 lg:w-1/2 max-w-md
                           text-center
                           z-5
                           pointer-events-none"
              >
                <h3 className={`text-xl md:text-2xl font-semibold mb-3 ${activeType.activeTextColor}`}>
                  {activeType.title}
                </h3>
                <p className="text-sm md:text-base text-gray-700 leading-relaxed">
                  {activeType.description}
                </p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default PentestTypes;